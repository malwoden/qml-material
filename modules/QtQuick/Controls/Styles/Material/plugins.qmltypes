import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -notrelocatable QtQuick.Controls.Styles.Material 0.1 .'

Module {
    Component {
        prototype: "QObject"
        name: "QtQuick.Controls.Styles.Material/ApplicationWindowStyle"
        exports: [
            "QtQuick.Controls.Styles.Material/ApplicationWindowStyle 0.1"
        ]
        exportMetaObjectRevisions: [1]
        isComposite: true
        Property {
            name: "control"
            type: "ApplicationWindow_QMLTYPE_12"
            isReadonly: true
            isPointer: true
        }
        Property { name: "background"; type: "QQmlComponent"; isPointer: true }
        Property { name: "panel"; type: "QQmlComponent"; isPointer: true }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.Controls.Styles.Material/ButtonStyle"
        exports: ["QtQuick.Controls.Styles.Material/ButtonStyle 0.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Property { name: "darkBackground"; type: "bool" }
        Property { name: "controlElevation"; type: "int" }
        Property { name: "controlBackground"; type: "QColor" }
        Property { name: "context"; type: "string" }
        Property { name: "control"; type: "Button_QMLTYPE_63"; isReadonly: true; isPointer: true }
        Property { name: "background"; type: "QQmlComponent"; isPointer: true }
        Property { name: "label"; type: "QQmlComponent"; isPointer: true }
        Property { name: "panel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "padding"; type: "QQuickPadding"; isReadonly: true; isPointer: true }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.Controls.Styles.Material/CheckBoxStyle"
        exports: ["QtQuick.Controls.Styles.Material/CheckBoxStyle 0.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Property { name: "color"; type: "QColor" }
        Property { name: "darkBackground"; type: "bool" }
        Property { name: "control"; type: "CheckBox_QMLTYPE_76"; isReadonly: true; isPointer: true }
        Property { name: "label"; type: "QQmlComponent"; isPointer: true }
        Property { name: "background"; type: "QQmlComponent"; isPointer: true }
        Property { name: "spacing"; type: "int" }
        Property { name: "indicator"; type: "QQmlComponent"; isPointer: true }
        Property { name: "panel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "padding"; type: "QQuickPadding"; isReadonly: true; isPointer: true }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.Controls.Styles.Material/ProgressBarStyle"
        exports: ["QtQuick.Controls.Styles.Material/ProgressBarStyle 0.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Property { name: "control"; type: "ProgressBar_QMLTYPE_86"; isReadonly: true; isPointer: true }
        Property { name: "currentProgress"; type: "double"; isReadonly: true }
        Property { name: "progress"; type: "QQmlComponent"; isPointer: true }
        Property { name: "background"; type: "QQmlComponent"; isPointer: true }
        Property { name: "panel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "padding"; type: "QQuickPadding"; isReadonly: true; isPointer: true }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.Controls.Styles.Material/RadioButtonStyle"
        exports: ["QtQuick.Controls.Styles.Material/RadioButtonStyle 0.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Property { name: "color"; type: "QColor" }
        Property { name: "darkBackground"; type: "bool" }
        Property {
            name: "control"
            type: "AbstractCheckable_QMLTYPE_74"
            isReadonly: true
            isPointer: true
        }
        Property { name: "label"; type: "QQmlComponent"; isPointer: true }
        Property { name: "background"; type: "QQmlComponent"; isPointer: true }
        Property { name: "spacing"; type: "int" }
        Property { name: "indicator"; type: "QQmlComponent"; isPointer: true }
        Property { name: "panel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "padding"; type: "QQuickPadding"; isReadonly: true; isPointer: true }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.Controls.Styles.Material/SliderStyle"
        exports: ["QtQuick.Controls.Styles.Material/SliderStyle 0.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Property { name: "color"; type: "QColor" }
        Property { name: "darkBackground"; type: "bool" }
        Property { name: "numericValueLabel"; type: "bool" }
        Property { name: "knob"; type: "QQmlComponent"; isPointer: true }
        Property { name: "control"; type: "Slider_QMLTYPE_100"; isReadonly: true; isPointer: true }
        Property { name: "handle"; type: "QQmlComponent"; isPointer: true }
        Property { name: "groove"; type: "QQmlComponent"; isPointer: true }
        Property { name: "tickmarks"; type: "QQmlComponent"; isPointer: true }
        Property { name: "panel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "padding"; type: "QQuickPadding"; isReadonly: true; isPointer: true }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.Controls.Styles.Material/SwitchStyle"
        exports: ["QtQuick.Controls.Styles.Material/SwitchStyle 0.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Property { name: "color"; type: "QColor" }
        Property { name: "darkBackground"; type: "bool" }
        Property { name: "handle"; type: "QQmlComponent"; isPointer: true }
        Property { name: "groove"; type: "QQmlComponent"; isPointer: true }
        Property { name: "panel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "control"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "padding"; type: "QQuickPadding"; isReadonly: true; isPointer: true }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.Controls.Styles.Material/TextFieldStyle"
        exports: ["QtQuick.Controls.Styles.Material/TextFieldStyle 0.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Property { name: "color"; type: "QColor" }
        Property { name: "errorColor"; type: "QColor" }
        Property { name: "helperText"; type: "string" }
        Property { name: "floatingLabel"; type: "bool" }
        Property { name: "hasError"; type: "bool" }
        Property { name: "characterLimit"; type: "int" }
        Property { name: "control"; type: "TextField_QMLTYPE_144"; isReadonly: true; isPointer: true }
        Property { name: "font"; type: "QFont" }
        Property { name: "textColor"; type: "QColor" }
        Property { name: "selectionColor"; type: "QColor" }
        Property { name: "selectedTextColor"; type: "QColor" }
        Property { name: "renderType"; type: "int" }
        Property { name: "placeholderTextColor"; type: "QColor" }
        Property { name: "background"; type: "QQmlComponent"; isPointer: true }
        Property { name: "panel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "__cursorHandle"; type: "QQmlComponent"; isPointer: true }
        Property { name: "__selectionHandle"; type: "QQmlComponent"; isPointer: true }
        Property { name: "__cursorDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "padding"; type: "QQuickPadding"; isReadonly: true; isPointer: true }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.Controls.Styles.Material/ToolBarStyle"
        exports: ["QtQuick.Controls.Styles.Material/ToolBarStyle 0.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Property { name: "background"; type: "QQmlComponent"; isPointer: true }
        Property { name: "menuButton"; type: "QQmlComponent"; isPointer: true }
        Property { name: "panel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "control"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "padding"; type: "QQuickPadding"; isReadonly: true; isPointer: true }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QObject"
        name: "QtQuick.Controls.Styles.Material/ToolButtonStyle"
        exports: ["QtQuick.Controls.Styles.Material/ToolButtonStyle 0.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Property { name: "control"; type: "Button_QMLTYPE_63"; isReadonly: true; isPointer: true }
        Property { name: "panel"; type: "QQmlComponent"; isPointer: true }
        Property { name: "padding"; type: "QQuickPadding"; isReadonly: true; isPointer: true }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
    }
}
